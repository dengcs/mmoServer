---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dengcs.
--- DateTime: 2018/11/5 17:06
---

local PLAY_STATE = {
	PREPARE = 1, -- 预备
	DEAL  	= 2, -- 发牌
	SNATCH  = 3, -- 抢地主
	DOUBLE	= 4, -- 加倍
	PLAY 	= 5, -- 游戏
	OVER 	= 6, -- 结束
}

local STATE_COUNT = {
	[PLAY_STATE.PREPARE] = 1,
	[PLAY_STATE.DEAL] = 3,
	[PLAY_STATE.SNATCH] = 4,
	[PLAY_STATE.DOUBLE] = 3,
	[PLAY_STATE.PLAY] = 54,
}

local state_manager = {}

function state_manager.new()
	local manager = {places = {}}

	setmetatable(manager, {__index = state_manager})

	return manager
end

function state_manager:reset_state_param()
	self.place	= 0
	self.count  = 1
end

function state_manager:begin()
	for i = 1, GLOBAL_PLAYER_NUM do
		self.places[i] = i
	end
	self.state 	= PLAY_STATE.PREPARE
	self:reset_state_param()
end

function state_manager:turn()
	self:turn_place()

	return self.state, self.pos
end

function state_manager:turn_place()
	if self.state > PLAY_STATE.PLAY then
		return
	end

	local max_count = STATE_COUNT[self.state]
	self.place	= (self.place % GLOBAL_PLAYER_NUM) + 1
	self.count 	= self.count + 1

	if self.count > max_count then
		self.state = self.state + 1
		self:reset_state_param()
	end
end

function state_manager:is_prepare()
	return self.state == PLAY_STATE.PREPARE
end

function state_manager:is_snatch()
	return self.state == PLAY_STATE.SNATCH
end

function state_manager:is_double()
	return self.state == PLAY_STATE.DOUBLE
end

function state_manager:is_play()
	return self.state == PLAY_STATE.PLAY
end

function state_manager:is_over()
	return self.state == PLAY_STATE.OVER
end

return state_manager