---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dengcs.
--- DateTime: 2018/11/5 17:06
---
local ENUM = require("config.gameenum")

local PLAY_STATE = ENUM.PLAY_STATE

local STATE_COUNT = {
	[PLAY_STATE.PREPARE] = 1,
	[PLAY_STATE.DEAL] = 3,
	[PLAY_STATE.SNATCH] = 4,
	[PLAY_STATE.DOUBLE] = 3,
	[PLAY_STATE.PLAY] = 54,
}

local play_state = {}

function play_state.new()
	local manager = {}
	manager.play_core = {}

	setmetatable(manager, {__index = play_state})

	return manager
end

-- 接收玩法模块授权的函数
function play_state:copy_core_functions(functions)
	self.play_core.functions = assert(functions)
end

function play_state:state_notify(idx, state)
	local state_notify = self.play_core.functions.state_notify
	if state_notify then
		state_notify(idx, state)
	end
end

function play_state:reset_state_param()
	self.place	= 0
	self.count  = 1
end

function play_state:begin()
	self.state 	= PLAY_STATE.PREPARE
	self:reset_state_param()
end

function play_state:turn()
	self:turn_process()

	return self.place,self.state
end

function play_state:turn_process()
	if self.state > PLAY_STATE.PLAY then
		return
	end

	local max_count = STATE_COUNT[self.state]
	self.count 	= self.count + 1

	if self.count > max_count then
		self.state = self.state + 1
		self:reset_state_param()
	end

	self.place	= (self.place % GLOBAL_PLAYER_NUM) + 1
end

-- 运行到发牌
function play_state:run()
	repeat
		local place, state = self:turn()
		print("dcs------------", place, state)
		self:state_notify(place, state)
		if state > PLAY_STATE.DEAL then
			break
		end
	until(false)
end

function play_state:begin_and_run()
	self:begin()
	self:run()
end

function play_state:is_prepare()
	return self.state == PLAY_STATE.PREPARE
end

function play_state:is_snatch()
	return self.state == PLAY_STATE.SNATCH
end

function play_state:is_double()
	return self.state == PLAY_STATE.DOUBLE
end

function play_state:is_play()
	return self.state == PLAY_STATE.PLAY
end

function play_state:is_over()
	return self.state == PLAY_STATE.OVER
end

return play_state